/**
 * Spartera API Documentation
 * Auto-generated API documentation for REST services of the Spartera platform
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: support@spartera.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.SparteraApiDocumentation);
  }
}(this, function(expect, SparteraApiDocumentation) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new SparteraApiDocumentation.Asset();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('Asset', function() {
    it('should create an instance of Asset', function() {
      // uncomment below and update the code to test Asset
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be.a(SparteraApiDocumentation.Asset);
    });

    it('should have the property assetId (base name: "asset_id")', function() {
      // uncomment below and update the code to test the property assetId
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property userId (base name: "user_id")', function() {
      // uncomment below and update the code to test the property userId
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property companyId (base name: "company_id")', function() {
      // uncomment below and update the code to test the property companyId
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property connectionId (base name: "connection_id")', function() {
      // uncomment below and update the code to test the property connectionId
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property llmConnectionId (base name: "llm_connection_id")', function() {
      // uncomment below and update the code to test the property llmConnectionId
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property snippetId (base name: "snippet_id")', function() {
      // uncomment below and update the code to test the property snippetId
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property industryId (base name: "industry_id")', function() {
      // uncomment below and update the code to test the property industryId
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property aiJobId (base name: "ai_job_id")', function() {
      // uncomment below and update the code to test the property aiJobId
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property approvalStatus (base name: "approval_status")', function() {
      // uncomment below and update the code to test the property approvalStatus
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property approvedByUserId (base name: "approved_by_user_id")', function() {
      // uncomment below and update the code to test the property approvedByUserId
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property approvedAt (base name: "approved_at")', function() {
      // uncomment below and update the code to test the property approvedAt
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property name (base name: "name")', function() {
      // uncomment below and update the code to test the property name
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property slug (base name: "slug")', function() {
      // uncomment below and update the code to test the property slug
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property description (base name: "description")', function() {
      // uncomment below and update the code to test the property description
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property source (base name: "source")', function() {
      // uncomment below and update the code to test the property source
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property assetType (base name: "asset_type")', function() {
      // uncomment below and update the code to test the property assetType
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property assetSchema (base name: "asset_schema")', function() {
      // uncomment below and update the code to test the property assetSchema
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property visibility (base name: "visibility")', function() {
      // uncomment below and update the code to test the property visibility
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property tags (base name: "tags")', function() {
      // uncomment below and update the code to test the property tags
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property sqlLogic (base name: "sql_logic")', function() {
      // uncomment below and update the code to test the property sqlLogic
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property sourceSchemaName (base name: "source_schema_name")', function() {
      // uncomment below and update the code to test the property sourceSchemaName
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property sourceTableName (base name: "source_table_name")', function() {
      // uncomment below and update the code to test the property sourceTableName
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property sellInMarketplace (base name: "sell_in_marketplace")', function() {
      // uncomment below and update the code to test the property sellInMarketplace
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property vizChartLibrary (base name: "viz_chart_library")', function() {
      // uncomment below and update the code to test the property vizChartLibrary
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property vizChartType (base name: "viz_chart_type")', function() {
      // uncomment below and update the code to test the property vizChartType
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property vizDepVarColName (base name: "viz_dep_var_col_name")', function() {
      // uncomment below and update the code to test the property vizDepVarColName
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property vizIndepVarColName (base name: "viz_indep_var_col_name")', function() {
      // uncomment below and update the code to test the property vizIndepVarColName
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property vizSizeColName (base name: "viz_size_col_name")', function() {
      // uncomment below and update the code to test the property vizSizeColName
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property vizColorColName (base name: "viz_color_col_name")', function() {
      // uncomment below and update the code to test the property vizColorColName
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property vizDataAggregation (base name: "viz_data_aggregation")', function() {
      // uncomment below and update the code to test the property vizDataAggregation
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property vizSortDirection (base name: "viz_sort_direction")', function() {
      // uncomment below and update the code to test the property vizSortDirection
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property vizDataLimit (base name: "viz_data_limit")', function() {
      // uncomment below and update the code to test the property vizDataLimit
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property vizColorScheme (base name: "viz_color_scheme")', function() {
      // uncomment below and update the code to test the property vizColorScheme
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property allowParams (base name: "allow_params")', function() {
      // uncomment below and update the code to test the property allowParams
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property acceptTerms (base name: "accept_terms")', function() {
      // uncomment below and update the code to test the property acceptTerms
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property cached (base name: "cached")', function() {
      // uncomment below and update the code to test the property cached
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property schedule (base name: "schedule")', function() {
      // uncomment below and update the code to test the property schedule
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property nextRun (base name: "next_run")', function() {
      // uncomment below and update the code to test the property nextRun
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property dataTimePeriodStart (base name: "data_time_period_start")', function() {
      // uncomment below and update the code to test the property dataTimePeriodStart
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property dataTimePeriodEnd (base name: "data_time_period_end")', function() {
      // uncomment below and update the code to test the property dataTimePeriodEnd
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property geographicCoverageType (base name: "geographic_coverage_type")', function() {
      // uncomment below and update the code to test the property geographicCoverageType
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property geographicCoverageDetails (base name: "geographic_coverage_details")', function() {
      // uncomment below and update the code to test the property geographicCoverageDetails
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property dataSourceRefreshFrequency (base name: "data_source_refresh_frequency")', function() {
      // uncomment below and update the code to test the property dataSourceRefreshFrequency
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property dataSourceLastRefreshed (base name: "data_source_last_refreshed")', function() {
      // uncomment below and update the code to test the property dataSourceLastRefreshed
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property dateCreated (base name: "date_created")', function() {
      // uncomment below and update the code to test the property dateCreated
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property lastUpdated (base name: "last_updated")', function() {
      // uncomment below and update the code to test the property lastUpdated
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

    it('should have the property active (base name: "active")', function() {
      // uncomment below and update the code to test the property active
      //var instance = new SparteraApiDocumentation.Asset();
      //expect(instance).to.be();
    });

  });

}));
