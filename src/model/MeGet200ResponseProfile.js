/**
 * Spartera API Documentation
 * Auto-generated API documentation for REST services of the Spartera platform
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: support@spartera.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MeGet200ResponseProfile model module.
 * @module model/MeGet200ResponseProfile
 * @version 0.0.0
 */
class MeGet200ResponseProfile {
    /**
     * Constructs a new <code>MeGet200ResponseProfile</code>.
     * @alias module:model/MeGet200ResponseProfile
     */
    constructor() { 
        
        MeGet200ResponseProfile.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MeGet200ResponseProfile</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MeGet200ResponseProfile} obj Optional instance to populate.
     * @return {module:model/MeGet200ResponseProfile} The populated <code>MeGet200ResponseProfile</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MeGet200ResponseProfile();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('company_id')) {
                obj['company_id'] = ApiClient.convertToType(data['company_id'], 'String');
            }
            if (data.hasOwnProperty('function_id')) {
                obj['function_id'] = ApiClient.convertToType(data['function_id'], 'Number');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('email_address')) {
                obj['email_address'] = ApiClient.convertToType(data['email_address'], 'String');
            }
            if (data.hasOwnProperty('timezone')) {
                obj['timezone'] = ApiClient.convertToType(data['timezone'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'Date');
            }
            if (data.hasOwnProperty('last_updated')) {
                obj['last_updated'] = ApiClient.convertToType(data['last_updated'], 'Date');
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MeGet200ResponseProfile</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MeGet200ResponseProfile</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['company_id'] && !(typeof data['company_id'] === 'string' || data['company_id'] instanceof String)) {
            throw new Error("Expected the field `company_id` to be a primitive type in the JSON string but got " + data['company_id']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['email_address'] && !(typeof data['email_address'] === 'string' || data['email_address'] instanceof String)) {
            throw new Error("Expected the field `email_address` to be a primitive type in the JSON string but got " + data['email_address']);
        }
        // ensure the json data is a string
        if (data['timezone'] && !(typeof data['timezone'] === 'string' || data['timezone'] instanceof String)) {
            throw new Error("Expected the field `timezone` to be a primitive type in the JSON string but got " + data['timezone']);
        }

        return true;
    }


}



/**
 * User ID (primary key)
 * @member {String} id
 */
MeGet200ResponseProfile.prototype['id'] = undefined;

/**
 * Profile type
 * @member {module:model/MeGet200ResponseProfile.TypeEnum} type
 */
MeGet200ResponseProfile.prototype['type'] = undefined;

/**
 * Company ID
 * @member {String} company_id
 */
MeGet200ResponseProfile.prototype['company_id'] = undefined;

/**
 * User function/role ID
 * @member {Number} function_id
 */
MeGet200ResponseProfile.prototype['function_id'] = undefined;

/**
 * User status
 * @member {String} status
 */
MeGet200ResponseProfile.prototype['status'] = undefined;

/**
 * User email address
 * @member {String} email_address
 */
MeGet200ResponseProfile.prototype['email_address'] = undefined;

/**
 * User timezone
 * @member {String} timezone
 */
MeGet200ResponseProfile.prototype['timezone'] = undefined;

/**
 * Account creation date
 * @member {Date} date_created
 */
MeGet200ResponseProfile.prototype['date_created'] = undefined;

/**
 * Last profile update
 * @member {Date} last_updated
 */
MeGet200ResponseProfile.prototype['last_updated'] = undefined;

/**
 * Account active status
 * @member {Boolean} active
 */
MeGet200ResponseProfile.prototype['active'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
MeGet200ResponseProfile['TypeEnum'] = {

    /**
     * value: "human_user"
     * @const
     */
    "human_user": "human_user",

    /**
     * value: "service_account"
     * @const
     */
    "service_account": "service_account"
};



export default MeGet200ResponseProfile;

