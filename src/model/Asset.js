/**
 * Spartera API Documentation
 * Auto-generated API documentation for REST services of the Spartera platform
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: support@spartera.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Asset model module.
 * @module model/Asset
 * @version 0.0.0
 */
class Asset {
    /**
     * Constructs a new <code>Asset</code>.
     * Asset model for every asset (insight/visualization/feed/etc.) customer creates
     * @alias module:model/Asset
     * @param companyId {String} 
     * @param name {String} 
     * @param source {String} 
     */
    constructor(companyId, name, source) { 
        
        Asset.initialize(this, companyId, name, source);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, companyId, name, source) { 
        obj['company_id'] = companyId;
        obj['name'] = name;
        obj['source'] = source;
    }

    /**
     * Constructs a <code>Asset</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Asset} obj Optional instance to populate.
     * @return {module:model/Asset} The populated <code>Asset</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Asset();

            if (data.hasOwnProperty('asset_id')) {
                obj['asset_id'] = ApiClient.convertToType(data['asset_id'], 'String');
            }
            if (data.hasOwnProperty('user_id')) {
                obj['user_id'] = ApiClient.convertToType(data['user_id'], 'String');
            }
            if (data.hasOwnProperty('company_id')) {
                obj['company_id'] = ApiClient.convertToType(data['company_id'], 'String');
            }
            if (data.hasOwnProperty('connection_id')) {
                obj['connection_id'] = ApiClient.convertToType(data['connection_id'], 'String');
            }
            if (data.hasOwnProperty('llm_connection_id')) {
                obj['llm_connection_id'] = ApiClient.convertToType(data['llm_connection_id'], 'String');
            }
            if (data.hasOwnProperty('snippet_id')) {
                obj['snippet_id'] = ApiClient.convertToType(data['snippet_id'], 'String');
            }
            if (data.hasOwnProperty('industry_id')) {
                obj['industry_id'] = ApiClient.convertToType(data['industry_id'], 'String');
            }
            if (data.hasOwnProperty('ai_job_id')) {
                obj['ai_job_id'] = ApiClient.convertToType(data['ai_job_id'], 'String');
            }
            if (data.hasOwnProperty('approval_status')) {
                obj['approval_status'] = ApiClient.convertToType(data['approval_status'], 'String');
            }
            if (data.hasOwnProperty('approved_by_user_id')) {
                obj['approved_by_user_id'] = ApiClient.convertToType(data['approved_by_user_id'], 'String');
            }
            if (data.hasOwnProperty('approved_at')) {
                obj['approved_at'] = ApiClient.convertToType(data['approved_at'], 'String');
            }
            if (data.hasOwnProperty('name')) {
                obj['name'] = ApiClient.convertToType(data['name'], 'String');
            }
            if (data.hasOwnProperty('slug')) {
                obj['slug'] = ApiClient.convertToType(data['slug'], 'String');
            }
            if (data.hasOwnProperty('description')) {
                obj['description'] = ApiClient.convertToType(data['description'], 'String');
            }
            if (data.hasOwnProperty('source')) {
                obj['source'] = ApiClient.convertToType(data['source'], 'String');
            }
            if (data.hasOwnProperty('asset_type')) {
                obj['asset_type'] = ApiClient.convertToType(data['asset_type'], 'String');
            }
            if (data.hasOwnProperty('asset_schema')) {
                obj['asset_schema'] = ApiClient.convertToType(data['asset_schema'], 'String');
            }
            if (data.hasOwnProperty('visibility')) {
                obj['visibility'] = ApiClient.convertToType(data['visibility'], 'String');
            }
            if (data.hasOwnProperty('tags')) {
                obj['tags'] = ApiClient.convertToType(data['tags'], 'String');
            }
            if (data.hasOwnProperty('sql_logic')) {
                obj['sql_logic'] = ApiClient.convertToType(data['sql_logic'], 'String');
            }
            if (data.hasOwnProperty('source_schema_name')) {
                obj['source_schema_name'] = ApiClient.convertToType(data['source_schema_name'], 'String');
            }
            if (data.hasOwnProperty('source_table_name')) {
                obj['source_table_name'] = ApiClient.convertToType(data['source_table_name'], 'String');
            }
            if (data.hasOwnProperty('sell_in_marketplace')) {
                obj['sell_in_marketplace'] = ApiClient.convertToType(data['sell_in_marketplace'], 'String');
            }
            if (data.hasOwnProperty('viz_chart_library')) {
                obj['viz_chart_library'] = ApiClient.convertToType(data['viz_chart_library'], 'String');
            }
            if (data.hasOwnProperty('viz_chart_type')) {
                obj['viz_chart_type'] = ApiClient.convertToType(data['viz_chart_type'], 'String');
            }
            if (data.hasOwnProperty('viz_dep_var_col_name')) {
                obj['viz_dep_var_col_name'] = ApiClient.convertToType(data['viz_dep_var_col_name'], 'String');
            }
            if (data.hasOwnProperty('viz_indep_var_col_name')) {
                obj['viz_indep_var_col_name'] = ApiClient.convertToType(data['viz_indep_var_col_name'], 'String');
            }
            if (data.hasOwnProperty('viz_size_col_name')) {
                obj['viz_size_col_name'] = ApiClient.convertToType(data['viz_size_col_name'], 'String');
            }
            if (data.hasOwnProperty('viz_color_col_name')) {
                obj['viz_color_col_name'] = ApiClient.convertToType(data['viz_color_col_name'], 'String');
            }
            if (data.hasOwnProperty('viz_data_aggregation')) {
                obj['viz_data_aggregation'] = ApiClient.convertToType(data['viz_data_aggregation'], 'String');
            }
            if (data.hasOwnProperty('viz_sort_direction')) {
                obj['viz_sort_direction'] = ApiClient.convertToType(data['viz_sort_direction'], 'String');
            }
            if (data.hasOwnProperty('viz_data_limit')) {
                obj['viz_data_limit'] = ApiClient.convertToType(data['viz_data_limit'], 'String');
            }
            if (data.hasOwnProperty('viz_color_scheme')) {
                obj['viz_color_scheme'] = ApiClient.convertToType(data['viz_color_scheme'], 'String');
            }
            if (data.hasOwnProperty('allow_params')) {
                obj['allow_params'] = ApiClient.convertToType(data['allow_params'], 'String');
            }
            if (data.hasOwnProperty('accept_terms')) {
                obj['accept_terms'] = ApiClient.convertToType(data['accept_terms'], 'String');
            }
            if (data.hasOwnProperty('cached')) {
                obj['cached'] = ApiClient.convertToType(data['cached'], 'String');
            }
            if (data.hasOwnProperty('schedule')) {
                obj['schedule'] = ApiClient.convertToType(data['schedule'], 'String');
            }
            if (data.hasOwnProperty('next_run')) {
                obj['next_run'] = ApiClient.convertToType(data['next_run'], 'String');
            }
            if (data.hasOwnProperty('data_time_period_start')) {
                obj['data_time_period_start'] = ApiClient.convertToType(data['data_time_period_start'], 'String');
            }
            if (data.hasOwnProperty('data_time_period_end')) {
                obj['data_time_period_end'] = ApiClient.convertToType(data['data_time_period_end'], 'String');
            }
            if (data.hasOwnProperty('geographic_coverage_type')) {
                obj['geographic_coverage_type'] = ApiClient.convertToType(data['geographic_coverage_type'], 'String');
            }
            if (data.hasOwnProperty('geographic_coverage_details')) {
                obj['geographic_coverage_details'] = ApiClient.convertToType(data['geographic_coverage_details'], 'String');
            }
            if (data.hasOwnProperty('data_source_refresh_frequency')) {
                obj['data_source_refresh_frequency'] = ApiClient.convertToType(data['data_source_refresh_frequency'], 'String');
            }
            if (data.hasOwnProperty('data_source_last_refreshed')) {
                obj['data_source_last_refreshed'] = ApiClient.convertToType(data['data_source_last_refreshed'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'String');
            }
            if (data.hasOwnProperty('last_updated')) {
                obj['last_updated'] = ApiClient.convertToType(data['last_updated'], 'String');
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Asset</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Asset</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Asset.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['asset_id'] && !(typeof data['asset_id'] === 'string' || data['asset_id'] instanceof String)) {
            throw new Error("Expected the field `asset_id` to be a primitive type in the JSON string but got " + data['asset_id']);
        }
        // ensure the json data is a string
        if (data['user_id'] && !(typeof data['user_id'] === 'string' || data['user_id'] instanceof String)) {
            throw new Error("Expected the field `user_id` to be a primitive type in the JSON string but got " + data['user_id']);
        }
        // ensure the json data is a string
        if (data['company_id'] && !(typeof data['company_id'] === 'string' || data['company_id'] instanceof String)) {
            throw new Error("Expected the field `company_id` to be a primitive type in the JSON string but got " + data['company_id']);
        }
        // ensure the json data is a string
        if (data['connection_id'] && !(typeof data['connection_id'] === 'string' || data['connection_id'] instanceof String)) {
            throw new Error("Expected the field `connection_id` to be a primitive type in the JSON string but got " + data['connection_id']);
        }
        // ensure the json data is a string
        if (data['llm_connection_id'] && !(typeof data['llm_connection_id'] === 'string' || data['llm_connection_id'] instanceof String)) {
            throw new Error("Expected the field `llm_connection_id` to be a primitive type in the JSON string but got " + data['llm_connection_id']);
        }
        // ensure the json data is a string
        if (data['snippet_id'] && !(typeof data['snippet_id'] === 'string' || data['snippet_id'] instanceof String)) {
            throw new Error("Expected the field `snippet_id` to be a primitive type in the JSON string but got " + data['snippet_id']);
        }
        // ensure the json data is a string
        if (data['industry_id'] && !(typeof data['industry_id'] === 'string' || data['industry_id'] instanceof String)) {
            throw new Error("Expected the field `industry_id` to be a primitive type in the JSON string but got " + data['industry_id']);
        }
        // ensure the json data is a string
        if (data['ai_job_id'] && !(typeof data['ai_job_id'] === 'string' || data['ai_job_id'] instanceof String)) {
            throw new Error("Expected the field `ai_job_id` to be a primitive type in the JSON string but got " + data['ai_job_id']);
        }
        // ensure the json data is a string
        if (data['approval_status'] && !(typeof data['approval_status'] === 'string' || data['approval_status'] instanceof String)) {
            throw new Error("Expected the field `approval_status` to be a primitive type in the JSON string but got " + data['approval_status']);
        }
        // ensure the json data is a string
        if (data['approved_by_user_id'] && !(typeof data['approved_by_user_id'] === 'string' || data['approved_by_user_id'] instanceof String)) {
            throw new Error("Expected the field `approved_by_user_id` to be a primitive type in the JSON string but got " + data['approved_by_user_id']);
        }
        // ensure the json data is a string
        if (data['approved_at'] && !(typeof data['approved_at'] === 'string' || data['approved_at'] instanceof String)) {
            throw new Error("Expected the field `approved_at` to be a primitive type in the JSON string but got " + data['approved_at']);
        }
        // ensure the json data is a string
        if (data['name'] && !(typeof data['name'] === 'string' || data['name'] instanceof String)) {
            throw new Error("Expected the field `name` to be a primitive type in the JSON string but got " + data['name']);
        }
        // ensure the json data is a string
        if (data['slug'] && !(typeof data['slug'] === 'string' || data['slug'] instanceof String)) {
            throw new Error("Expected the field `slug` to be a primitive type in the JSON string but got " + data['slug']);
        }
        // ensure the json data is a string
        if (data['description'] && !(typeof data['description'] === 'string' || data['description'] instanceof String)) {
            throw new Error("Expected the field `description` to be a primitive type in the JSON string but got " + data['description']);
        }
        // ensure the json data is a string
        if (data['source'] && !(typeof data['source'] === 'string' || data['source'] instanceof String)) {
            throw new Error("Expected the field `source` to be a primitive type in the JSON string but got " + data['source']);
        }
        // ensure the json data is a string
        if (data['asset_type'] && !(typeof data['asset_type'] === 'string' || data['asset_type'] instanceof String)) {
            throw new Error("Expected the field `asset_type` to be a primitive type in the JSON string but got " + data['asset_type']);
        }
        // ensure the json data is a string
        if (data['asset_schema'] && !(typeof data['asset_schema'] === 'string' || data['asset_schema'] instanceof String)) {
            throw new Error("Expected the field `asset_schema` to be a primitive type in the JSON string but got " + data['asset_schema']);
        }
        // ensure the json data is a string
        if (data['visibility'] && !(typeof data['visibility'] === 'string' || data['visibility'] instanceof String)) {
            throw new Error("Expected the field `visibility` to be a primitive type in the JSON string but got " + data['visibility']);
        }
        // ensure the json data is a string
        if (data['tags'] && !(typeof data['tags'] === 'string' || data['tags'] instanceof String)) {
            throw new Error("Expected the field `tags` to be a primitive type in the JSON string but got " + data['tags']);
        }
        // ensure the json data is a string
        if (data['sql_logic'] && !(typeof data['sql_logic'] === 'string' || data['sql_logic'] instanceof String)) {
            throw new Error("Expected the field `sql_logic` to be a primitive type in the JSON string but got " + data['sql_logic']);
        }
        // ensure the json data is a string
        if (data['source_schema_name'] && !(typeof data['source_schema_name'] === 'string' || data['source_schema_name'] instanceof String)) {
            throw new Error("Expected the field `source_schema_name` to be a primitive type in the JSON string but got " + data['source_schema_name']);
        }
        // ensure the json data is a string
        if (data['source_table_name'] && !(typeof data['source_table_name'] === 'string' || data['source_table_name'] instanceof String)) {
            throw new Error("Expected the field `source_table_name` to be a primitive type in the JSON string but got " + data['source_table_name']);
        }
        // ensure the json data is a string
        if (data['sell_in_marketplace'] && !(typeof data['sell_in_marketplace'] === 'string' || data['sell_in_marketplace'] instanceof String)) {
            throw new Error("Expected the field `sell_in_marketplace` to be a primitive type in the JSON string but got " + data['sell_in_marketplace']);
        }
        // ensure the json data is a string
        if (data['viz_chart_library'] && !(typeof data['viz_chart_library'] === 'string' || data['viz_chart_library'] instanceof String)) {
            throw new Error("Expected the field `viz_chart_library` to be a primitive type in the JSON string but got " + data['viz_chart_library']);
        }
        // ensure the json data is a string
        if (data['viz_chart_type'] && !(typeof data['viz_chart_type'] === 'string' || data['viz_chart_type'] instanceof String)) {
            throw new Error("Expected the field `viz_chart_type` to be a primitive type in the JSON string but got " + data['viz_chart_type']);
        }
        // ensure the json data is a string
        if (data['viz_dep_var_col_name'] && !(typeof data['viz_dep_var_col_name'] === 'string' || data['viz_dep_var_col_name'] instanceof String)) {
            throw new Error("Expected the field `viz_dep_var_col_name` to be a primitive type in the JSON string but got " + data['viz_dep_var_col_name']);
        }
        // ensure the json data is a string
        if (data['viz_indep_var_col_name'] && !(typeof data['viz_indep_var_col_name'] === 'string' || data['viz_indep_var_col_name'] instanceof String)) {
            throw new Error("Expected the field `viz_indep_var_col_name` to be a primitive type in the JSON string but got " + data['viz_indep_var_col_name']);
        }
        // ensure the json data is a string
        if (data['viz_size_col_name'] && !(typeof data['viz_size_col_name'] === 'string' || data['viz_size_col_name'] instanceof String)) {
            throw new Error("Expected the field `viz_size_col_name` to be a primitive type in the JSON string but got " + data['viz_size_col_name']);
        }
        // ensure the json data is a string
        if (data['viz_color_col_name'] && !(typeof data['viz_color_col_name'] === 'string' || data['viz_color_col_name'] instanceof String)) {
            throw new Error("Expected the field `viz_color_col_name` to be a primitive type in the JSON string but got " + data['viz_color_col_name']);
        }
        // ensure the json data is a string
        if (data['viz_data_aggregation'] && !(typeof data['viz_data_aggregation'] === 'string' || data['viz_data_aggregation'] instanceof String)) {
            throw new Error("Expected the field `viz_data_aggregation` to be a primitive type in the JSON string but got " + data['viz_data_aggregation']);
        }
        // ensure the json data is a string
        if (data['viz_sort_direction'] && !(typeof data['viz_sort_direction'] === 'string' || data['viz_sort_direction'] instanceof String)) {
            throw new Error("Expected the field `viz_sort_direction` to be a primitive type in the JSON string but got " + data['viz_sort_direction']);
        }
        // ensure the json data is a string
        if (data['viz_data_limit'] && !(typeof data['viz_data_limit'] === 'string' || data['viz_data_limit'] instanceof String)) {
            throw new Error("Expected the field `viz_data_limit` to be a primitive type in the JSON string but got " + data['viz_data_limit']);
        }
        // ensure the json data is a string
        if (data['viz_color_scheme'] && !(typeof data['viz_color_scheme'] === 'string' || data['viz_color_scheme'] instanceof String)) {
            throw new Error("Expected the field `viz_color_scheme` to be a primitive type in the JSON string but got " + data['viz_color_scheme']);
        }
        // ensure the json data is a string
        if (data['allow_params'] && !(typeof data['allow_params'] === 'string' || data['allow_params'] instanceof String)) {
            throw new Error("Expected the field `allow_params` to be a primitive type in the JSON string but got " + data['allow_params']);
        }
        // ensure the json data is a string
        if (data['accept_terms'] && !(typeof data['accept_terms'] === 'string' || data['accept_terms'] instanceof String)) {
            throw new Error("Expected the field `accept_terms` to be a primitive type in the JSON string but got " + data['accept_terms']);
        }
        // ensure the json data is a string
        if (data['cached'] && !(typeof data['cached'] === 'string' || data['cached'] instanceof String)) {
            throw new Error("Expected the field `cached` to be a primitive type in the JSON string but got " + data['cached']);
        }
        // ensure the json data is a string
        if (data['schedule'] && !(typeof data['schedule'] === 'string' || data['schedule'] instanceof String)) {
            throw new Error("Expected the field `schedule` to be a primitive type in the JSON string but got " + data['schedule']);
        }
        // ensure the json data is a string
        if (data['next_run'] && !(typeof data['next_run'] === 'string' || data['next_run'] instanceof String)) {
            throw new Error("Expected the field `next_run` to be a primitive type in the JSON string but got " + data['next_run']);
        }
        // ensure the json data is a string
        if (data['data_time_period_start'] && !(typeof data['data_time_period_start'] === 'string' || data['data_time_period_start'] instanceof String)) {
            throw new Error("Expected the field `data_time_period_start` to be a primitive type in the JSON string but got " + data['data_time_period_start']);
        }
        // ensure the json data is a string
        if (data['data_time_period_end'] && !(typeof data['data_time_period_end'] === 'string' || data['data_time_period_end'] instanceof String)) {
            throw new Error("Expected the field `data_time_period_end` to be a primitive type in the JSON string but got " + data['data_time_period_end']);
        }
        // ensure the json data is a string
        if (data['geographic_coverage_type'] && !(typeof data['geographic_coverage_type'] === 'string' || data['geographic_coverage_type'] instanceof String)) {
            throw new Error("Expected the field `geographic_coverage_type` to be a primitive type in the JSON string but got " + data['geographic_coverage_type']);
        }
        // ensure the json data is a string
        if (data['geographic_coverage_details'] && !(typeof data['geographic_coverage_details'] === 'string' || data['geographic_coverage_details'] instanceof String)) {
            throw new Error("Expected the field `geographic_coverage_details` to be a primitive type in the JSON string but got " + data['geographic_coverage_details']);
        }
        // ensure the json data is a string
        if (data['data_source_refresh_frequency'] && !(typeof data['data_source_refresh_frequency'] === 'string' || data['data_source_refresh_frequency'] instanceof String)) {
            throw new Error("Expected the field `data_source_refresh_frequency` to be a primitive type in the JSON string but got " + data['data_source_refresh_frequency']);
        }
        // ensure the json data is a string
        if (data['data_source_last_refreshed'] && !(typeof data['data_source_last_refreshed'] === 'string' || data['data_source_last_refreshed'] instanceof String)) {
            throw new Error("Expected the field `data_source_last_refreshed` to be a primitive type in the JSON string but got " + data['data_source_last_refreshed']);
        }
        // ensure the json data is a string
        if (data['date_created'] && !(typeof data['date_created'] === 'string' || data['date_created'] instanceof String)) {
            throw new Error("Expected the field `date_created` to be a primitive type in the JSON string but got " + data['date_created']);
        }
        // ensure the json data is a string
        if (data['last_updated'] && !(typeof data['last_updated'] === 'string' || data['last_updated'] instanceof String)) {
            throw new Error("Expected the field `last_updated` to be a primitive type in the JSON string but got " + data['last_updated']);
        }
        // ensure the json data is a string
        if (data['active'] && !(typeof data['active'] === 'string' || data['active'] instanceof String)) {
            throw new Error("Expected the field `active` to be a primitive type in the JSON string but got " + data['active']);
        }

        return true;
    }


}

Asset.RequiredProperties = ["company_id", "name", "source"];

/**
 * @member {String} asset_id
 */
Asset.prototype['asset_id'] = undefined;

/**
 * @member {String} user_id
 */
Asset.prototype['user_id'] = undefined;

/**
 * @member {String} company_id
 */
Asset.prototype['company_id'] = undefined;

/**
 * @member {String} connection_id
 */
Asset.prototype['connection_id'] = undefined;

/**
 * @member {String} llm_connection_id
 */
Asset.prototype['llm_connection_id'] = undefined;

/**
 * @member {String} snippet_id
 */
Asset.prototype['snippet_id'] = undefined;

/**
 * @member {String} industry_id
 */
Asset.prototype['industry_id'] = undefined;

/**
 * @member {String} ai_job_id
 */
Asset.prototype['ai_job_id'] = undefined;

/**
 * @member {String} approval_status
 */
Asset.prototype['approval_status'] = undefined;

/**
 * @member {String} approved_by_user_id
 */
Asset.prototype['approved_by_user_id'] = undefined;

/**
 * @member {String} approved_at
 */
Asset.prototype['approved_at'] = undefined;

/**
 * @member {String} name
 */
Asset.prototype['name'] = undefined;

/**
 * @member {String} slug
 */
Asset.prototype['slug'] = undefined;

/**
 * @member {String} description
 */
Asset.prototype['description'] = undefined;

/**
 * @member {String} source
 */
Asset.prototype['source'] = undefined;

/**
 * @member {String} asset_type
 */
Asset.prototype['asset_type'] = undefined;

/**
 * @member {String} asset_schema
 */
Asset.prototype['asset_schema'] = undefined;

/**
 * @member {String} visibility
 */
Asset.prototype['visibility'] = undefined;

/**
 * @member {String} tags
 */
Asset.prototype['tags'] = undefined;

/**
 * @member {String} sql_logic
 */
Asset.prototype['sql_logic'] = undefined;

/**
 * @member {String} source_schema_name
 */
Asset.prototype['source_schema_name'] = undefined;

/**
 * @member {String} source_table_name
 */
Asset.prototype['source_table_name'] = undefined;

/**
 * @member {String} sell_in_marketplace
 */
Asset.prototype['sell_in_marketplace'] = undefined;

/**
 * @member {String} viz_chart_library
 */
Asset.prototype['viz_chart_library'] = undefined;

/**
 * @member {String} viz_chart_type
 */
Asset.prototype['viz_chart_type'] = undefined;

/**
 * @member {String} viz_dep_var_col_name
 */
Asset.prototype['viz_dep_var_col_name'] = undefined;

/**
 * @member {String} viz_indep_var_col_name
 */
Asset.prototype['viz_indep_var_col_name'] = undefined;

/**
 * @member {String} viz_size_col_name
 */
Asset.prototype['viz_size_col_name'] = undefined;

/**
 * @member {String} viz_color_col_name
 */
Asset.prototype['viz_color_col_name'] = undefined;

/**
 * @member {String} viz_data_aggregation
 */
Asset.prototype['viz_data_aggregation'] = undefined;

/**
 * @member {String} viz_sort_direction
 */
Asset.prototype['viz_sort_direction'] = undefined;

/**
 * @member {String} viz_data_limit
 */
Asset.prototype['viz_data_limit'] = undefined;

/**
 * @member {String} viz_color_scheme
 */
Asset.prototype['viz_color_scheme'] = undefined;

/**
 * @member {String} allow_params
 */
Asset.prototype['allow_params'] = undefined;

/**
 * @member {String} accept_terms
 */
Asset.prototype['accept_terms'] = undefined;

/**
 * @member {String} cached
 */
Asset.prototype['cached'] = undefined;

/**
 * @member {String} schedule
 */
Asset.prototype['schedule'] = undefined;

/**
 * @member {String} next_run
 */
Asset.prototype['next_run'] = undefined;

/**
 * @member {String} data_time_period_start
 */
Asset.prototype['data_time_period_start'] = undefined;

/**
 * @member {String} data_time_period_end
 */
Asset.prototype['data_time_period_end'] = undefined;

/**
 * @member {String} geographic_coverage_type
 */
Asset.prototype['geographic_coverage_type'] = undefined;

/**
 * @member {String} geographic_coverage_details
 */
Asset.prototype['geographic_coverage_details'] = undefined;

/**
 * @member {String} data_source_refresh_frequency
 */
Asset.prototype['data_source_refresh_frequency'] = undefined;

/**
 * @member {String} data_source_last_refreshed
 */
Asset.prototype['data_source_last_refreshed'] = undefined;

/**
 * @member {String} date_created
 */
Asset.prototype['date_created'] = undefined;

/**
 * @member {String} last_updated
 */
Asset.prototype['last_updated'] = undefined;

/**
 * @member {String} active
 */
Asset.prototype['active'] = undefined;






export default Asset;

