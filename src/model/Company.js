/**
 * Spartera API Documentation
 * Auto-generated API documentation for REST services of the Spartera platform
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: support@spartera.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Company model module.
 * @module model/Company
 * @version 0.0.0
 */
class Company {
    /**
     * Constructs a new <code>Company</code>.
     * All of our customer company entities
     * @alias module:model/Company
     * @param companyHandle {String} 
     * @param companyDomain {String} 
     * @param creditsBalance {String} 
     */
    constructor(companyHandle, companyDomain, creditsBalance) { 
        
        Company.initialize(this, companyHandle, companyDomain, creditsBalance);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, companyHandle, companyDomain, creditsBalance) { 
        obj['company_handle'] = companyHandle;
        obj['company_domain'] = companyDomain;
        obj['credits_balance'] = creditsBalance;
    }

    /**
     * Constructs a <code>Company</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Company} obj Optional instance to populate.
     * @return {module:model/Company} The populated <code>Company</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Company();

            if (data.hasOwnProperty('company_id')) {
                obj['company_id'] = ApiClient.convertToType(data['company_id'], 'String');
            }
            if (data.hasOwnProperty('industry_id')) {
                obj['industry_id'] = ApiClient.convertToType(data['industry_id'], 'String');
            }
            if (data.hasOwnProperty('country_id')) {
                obj['country_id'] = ApiClient.convertToType(data['country_id'], 'String');
            }
            if (data.hasOwnProperty('company_name')) {
                obj['company_name'] = ApiClient.convertToType(data['company_name'], 'String');
            }
            if (data.hasOwnProperty('company_description')) {
                obj['company_description'] = ApiClient.convertToType(data['company_description'], 'String');
            }
            if (data.hasOwnProperty('company_handle')) {
                obj['company_handle'] = ApiClient.convertToType(data['company_handle'], 'String');
            }
            if (data.hasOwnProperty('company_domain')) {
                obj['company_domain'] = ApiClient.convertToType(data['company_domain'], 'String');
            }
            if (data.hasOwnProperty('credits_balance')) {
                obj['credits_balance'] = ApiClient.convertToType(data['credits_balance'], 'String');
            }
            if (data.hasOwnProperty('accepted_eula')) {
                obj['accepted_eula'] = ApiClient.convertToType(data['accepted_eula'], 'String');
            }
            if (data.hasOwnProperty('stripe_account_id')) {
                obj['stripe_account_id'] = ApiClient.convertToType(data['stripe_account_id'], 'String');
            }
            if (data.hasOwnProperty('stripe_account_status')) {
                obj['stripe_account_status'] = ApiClient.convertToType(data['stripe_account_status'], 'String');
            }
            if (data.hasOwnProperty('date_created')) {
                obj['date_created'] = ApiClient.convertToType(data['date_created'], 'String');
            }
            if (data.hasOwnProperty('last_updated')) {
                obj['last_updated'] = ApiClient.convertToType(data['last_updated'], 'String');
            }
            if (data.hasOwnProperty('active')) {
                obj['active'] = ApiClient.convertToType(data['active'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Company</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Company</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of Company.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['company_id'] && !(typeof data['company_id'] === 'string' || data['company_id'] instanceof String)) {
            throw new Error("Expected the field `company_id` to be a primitive type in the JSON string but got " + data['company_id']);
        }
        // ensure the json data is a string
        if (data['industry_id'] && !(typeof data['industry_id'] === 'string' || data['industry_id'] instanceof String)) {
            throw new Error("Expected the field `industry_id` to be a primitive type in the JSON string but got " + data['industry_id']);
        }
        // ensure the json data is a string
        if (data['country_id'] && !(typeof data['country_id'] === 'string' || data['country_id'] instanceof String)) {
            throw new Error("Expected the field `country_id` to be a primitive type in the JSON string but got " + data['country_id']);
        }
        // ensure the json data is a string
        if (data['company_name'] && !(typeof data['company_name'] === 'string' || data['company_name'] instanceof String)) {
            throw new Error("Expected the field `company_name` to be a primitive type in the JSON string but got " + data['company_name']);
        }
        // ensure the json data is a string
        if (data['company_description'] && !(typeof data['company_description'] === 'string' || data['company_description'] instanceof String)) {
            throw new Error("Expected the field `company_description` to be a primitive type in the JSON string but got " + data['company_description']);
        }
        // ensure the json data is a string
        if (data['company_handle'] && !(typeof data['company_handle'] === 'string' || data['company_handle'] instanceof String)) {
            throw new Error("Expected the field `company_handle` to be a primitive type in the JSON string but got " + data['company_handle']);
        }
        // ensure the json data is a string
        if (data['company_domain'] && !(typeof data['company_domain'] === 'string' || data['company_domain'] instanceof String)) {
            throw new Error("Expected the field `company_domain` to be a primitive type in the JSON string but got " + data['company_domain']);
        }
        // ensure the json data is a string
        if (data['credits_balance'] && !(typeof data['credits_balance'] === 'string' || data['credits_balance'] instanceof String)) {
            throw new Error("Expected the field `credits_balance` to be a primitive type in the JSON string but got " + data['credits_balance']);
        }
        // ensure the json data is a string
        if (data['accepted_eula'] && !(typeof data['accepted_eula'] === 'string' || data['accepted_eula'] instanceof String)) {
            throw new Error("Expected the field `accepted_eula` to be a primitive type in the JSON string but got " + data['accepted_eula']);
        }
        // ensure the json data is a string
        if (data['stripe_account_id'] && !(typeof data['stripe_account_id'] === 'string' || data['stripe_account_id'] instanceof String)) {
            throw new Error("Expected the field `stripe_account_id` to be a primitive type in the JSON string but got " + data['stripe_account_id']);
        }
        // ensure the json data is a string
        if (data['stripe_account_status'] && !(typeof data['stripe_account_status'] === 'string' || data['stripe_account_status'] instanceof String)) {
            throw new Error("Expected the field `stripe_account_status` to be a primitive type in the JSON string but got " + data['stripe_account_status']);
        }
        // ensure the json data is a string
        if (data['date_created'] && !(typeof data['date_created'] === 'string' || data['date_created'] instanceof String)) {
            throw new Error("Expected the field `date_created` to be a primitive type in the JSON string but got " + data['date_created']);
        }
        // ensure the json data is a string
        if (data['last_updated'] && !(typeof data['last_updated'] === 'string' || data['last_updated'] instanceof String)) {
            throw new Error("Expected the field `last_updated` to be a primitive type in the JSON string but got " + data['last_updated']);
        }
        // ensure the json data is a string
        if (data['active'] && !(typeof data['active'] === 'string' || data['active'] instanceof String)) {
            throw new Error("Expected the field `active` to be a primitive type in the JSON string but got " + data['active']);
        }

        return true;
    }


}

Company.RequiredProperties = ["company_handle", "company_domain", "credits_balance"];

/**
 * @member {String} company_id
 */
Company.prototype['company_id'] = undefined;

/**
 * @member {String} industry_id
 */
Company.prototype['industry_id'] = undefined;

/**
 * @member {String} country_id
 */
Company.prototype['country_id'] = undefined;

/**
 * @member {String} company_name
 */
Company.prototype['company_name'] = undefined;

/**
 * @member {String} company_description
 */
Company.prototype['company_description'] = undefined;

/**
 * @member {String} company_handle
 */
Company.prototype['company_handle'] = undefined;

/**
 * @member {String} company_domain
 */
Company.prototype['company_domain'] = undefined;

/**
 * @member {String} credits_balance
 */
Company.prototype['credits_balance'] = undefined;

/**
 * @member {String} accepted_eula
 */
Company.prototype['accepted_eula'] = undefined;

/**
 * @member {String} stripe_account_id
 */
Company.prototype['stripe_account_id'] = undefined;

/**
 * @member {String} stripe_account_status
 */
Company.prototype['stripe_account_status'] = undefined;

/**
 * @member {String} date_created
 */
Company.prototype['date_created'] = undefined;

/**
 * @member {String} last_updated
 */
Company.prototype['last_updated'] = undefined;

/**
 * @member {String} active
 */
Company.prototype['active'] = undefined;






export default Company;

