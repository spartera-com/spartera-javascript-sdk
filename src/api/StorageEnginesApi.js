/**
 * Spartera API Documentation
 * Auto-generated API documentation for REST services of the Spartera platform
 *
 * The version of the OpenAPI document: 0.0.0
 * Contact: support@spartera.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import InlineObject1 from '../model/InlineObject1';
import InlineObject2 from '../model/InlineObject2';
import InlineObject3 from '../model/InlineObject3';

/**
* StorageEngines service.
* @module api/StorageEnginesApi
* @version 0.0.0
*/
export default class StorageEnginesApi {

    /**
    * Constructs a new StorageEnginesApi. 
    * @alias module:api/StorageEnginesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }



    /**
     * Get single storage engine by ID
     * @param {String} providerId 
     * @param {String} engineId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Object} and HTTP response
     */
    cloudProvidersProviderIdStorageEnginesEngineIdGetWithHttpInfo(providerId, engineId) {
      let postBody = null;
      // verify the required parameter 'providerId' is set
      if (providerId === undefined || providerId === null) {
        throw new Error("Missing the required parameter 'providerId' when calling cloudProvidersProviderIdStorageEnginesEngineIdGet");
      }
      // verify the required parameter 'engineId' is set
      if (engineId === undefined || engineId === null) {
        throw new Error("Missing the required parameter 'engineId' when calling cloudProvidersProviderIdStorageEnginesEngineIdGet");
      }

      let pathParams = {
        'provider_id': providerId,
        'engine_id': engineId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/cloud-providers/{provider_id}/storage-engines/{engine_id}', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get single storage engine by ID
     * @param {String} providerId 
     * @param {String} engineId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Object}
     */
    cloudProvidersProviderIdStorageEnginesEngineIdGet(providerId, engineId) {
      return this.cloudProvidersProviderIdStorageEnginesEngineIdGetWithHttpInfo(providerId, engineId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


    /**
     * Get a list of all storage engines
     * @param {String} providerId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link Object} and HTTP response
     */
    cloudProvidersProviderIdStorageEnginesGetWithHttpInfo(providerId) {
      let postBody = null;
      // verify the required parameter 'providerId' is set
      if (providerId === undefined || providerId === null) {
        throw new Error("Missing the required parameter 'providerId' when calling cloudProvidersProviderIdStorageEnginesGet");
      }

      let pathParams = {
        'provider_id': providerId
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['ApiKeyAuth'];
      let contentTypes = [];
      let accepts = ['application/json'];
      let returnType = Object;
      return this.apiClient.callApi(
        '/cloud-providers/{provider_id}/storage-engines', 'GET',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null
      );
    }

    /**
     * Get a list of all storage engines
     * @param {String} providerId 
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link Object}
     */
    cloudProvidersProviderIdStorageEnginesGet(providerId) {
      return this.cloudProvidersProviderIdStorageEnginesGetWithHttpInfo(providerId)
        .then(function(response_and_data) {
          return response_and_data.data;
        });
    }


}
